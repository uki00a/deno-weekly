<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>webview_deno on 週刊Deno</title><link>https://uki00a.github.io/deno-weekly/tags/webview_deno.html</link><description>Recent content in webview_deno on 週刊Deno</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 26 Jun 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://uki00a.github.io/deno-weekly/tags/webview_deno/index.xml" rel="self" type="application/rss+xml"/><item><title>2021/06/20〜2022/06/26の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/06/26.html</link><pubDate>Sun, 26 Jun 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/06/26.html</guid><description>Deno v1.23.1 Deno v1.23.1がリリースされました。
FFI関連の変更点 破壊的変更としてDeno.UnsafePointerが削除されました。 (正確にはDeno.UnsafePointer.ofのみ残されています) 今後、ポインタはbigintで表現されます。
その他には、unstable APIとしてDeno.UnsafeCallbackが追加されています。 JavaScriptの関数を関数ポインタとして受け渡すために利用できます。
deno fmtの改善 deno fmtコマンドがnode_modulesと.gitディレクトリを無視するようになりました。
また、JavaScriptファイルのパースに失敗した際に、deno fmt --checkがちゃんと失敗するように修正されています。
その他の変更点 fetchの呼び出し時に、デフォルトでAccept-Language: *ヘッダが設定されるように修正されました。 deno replコマンドで、直前の文字が空白のときにTabキーを押すと、タブ(\t)が挿入されるように修正されました。 deno runコマンドで.d.ctsや.d.mtsファイルを実行すると、プロセスがパニックする問題が修正されました。 https://github.com/denoland/deno/releases/tag/v1.23.1
deno_std v0.145.0 deno_std v0.145.0がリリースされました。
std/encoding/json/stream std/encoding/json/streamが追加されました。
このモジュールでは、下記4フォーマットでのストリーミングがサポートされています。
JSON Lines ndjson JSON Text Sequences Concatenated JSON JSONParseStreamは上記の上から3つのフォーマットをサポートしています。
import { JSONParseStream } from &amp;#34;https://deno.land/std@0.145.0/encoding/json/stream.ts&amp;#34;; import { readableStreamFromIterable } from &amp;#34;https://deno.land/std@0.145.0/streams/conversion.ts&amp;#34;; const readable = readableStreamFromIterable([ `{&amp;#34;name&amp;#34;: &amp;#34;foo&amp;#34;}`, `{&amp;#34;a&amp;#34;: 1, &amp;#34;b&amp;#34;: true}`, ]) .pipeThrough(new JSONParseStream()); for await (const json of readable) { console.</description></item></channel></rss>