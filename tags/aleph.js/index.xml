<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Aleph.js on 週刊Deno</title><link>https://uki00a.github.io/deno-weekly/tags/aleph.js.html</link><description>Recent content in Aleph.js on 週刊Deno</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 15 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://uki00a.github.io/deno-weekly/tags/aleph.js/index.xml" rel="self" type="application/rss+xml"/><item><title>2021/05/09〜2022/05/15の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/05/15.html</link><pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/05/15.html</guid><description>Deno v1.21.3 Deno v1.21.3がリリースされました。
deno task deno task &amp;lt;タスク名&amp;gt;の&amp;lt;タスク名&amp;gt;の直後に--から始まるオプションを指定できない問題が修正されました。
その他の修正 Deno.connectTlsで作成したTLSコネクションを閉じる前に、ハンドシェイクが完了することが保証されるようになりました。
その他にも、Windows上で標準出力や標準エラー出力にマルチバイト文字を書き込んだ際の挙動の改善などが実施されています。
https://github.com/denoland/deno/releases/tag/v1.21.3
deno_std v0.139.0 deno_std v0.139.0がリリースされました。
encoding/jsonc deno_stdにJSONCパーサが実装されました。
import { parse } from &amp;#34;https://deno.land/std@0.139.0/encoding/jsonc.ts&amp;#34;; console.log(parse(`{ // hello &amp;#34;foo&amp;#34;: 1 }`)); // =&amp;gt; { foo: 1 } node dnsパッケージで以下のAPIが実装されました。
dns.Resolver dns.setServers / dns.getServers dns.resolveAnyやdns.resolve4などの問い合わせAPI また、netパッケージでUnixドメインソケットがサポートされています。
testing/snapshot assertSnapshotにオプションを渡せるようになりました。
例えば、dirオプションによってスナップショットの保存先ディレクトリなどをカスタマイズできます。
await assertSnapshot(t, actual, { dir: &amp;#34;testdata&amp;#34; }); https://github.com/denoland/deno_std/releases/tag/0.139.0
--no-configオプションのサポートについて deno.json(c)の自動的な読み込みを無効化するために、--no-configオプションを追加するPRが作成されています。
feat: add &amp;ndash;no-config flag (#14555)
$ deno run --no-config main.</description></item><item><title>2021/04/25〜2022/05/01の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/05/01.html</link><pubDate>Sun, 01 May 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/05/01.html</guid><description>Deno v1.21.1 Deno v1.21.1がリリースされました。
ネイティブHTTPサーバ(Deno.serveHttp)の変更点 Deno v1.20でレスポンスボディの自動的な圧縮がサポートされました。
このリリースでは、レスポンスボディにReadableStreamが指定された際の圧縮がサポートされています。
その他にもいくつかのパフォーマンス改善が実施されています。
deno taskで引数に--を指定した際の挙動が変更 例えば、deno.jsonで次のようなタスクが定義されていたとします。
{ &amp;#34;tasks&amp;#34;: { &amp;#34;test&amp;#34;: &amp;#34;deno test --allow-read&amp;#34; } } 例えば、下記のように--を指定してタスクを実行したとします。
$ deno task test -- some-test.js この場合、v1.21.0時点では次のようにコマンドが実行されていました。
$ deno test --allow-read &amp;#34;some-test.js&amp;#34; 今回リリースされたv1.21.1では、次のように変更されています。
$ deno test --allow-read &amp;#34;--&amp;#34; &amp;#34;some-test.js&amp;#34; Deno.inspectの変更点 strAbbreviateSizeオプションが追加されました。 文字列がこのオプションで指定された長さを超えると省略して表示されます。 デフォルト値は100です。 compact: falseが指定された際であっても、空のIterableオブジェクトはコンパクト化して表示するように修正されています。 deno benchの変更点 deno benchで2つ以上のファイルを実行した際に、前のファイルのベンチマーク結果が次のファイルに影響を与えてしまう問題が修正されました。
この問題は、例えば、1つ目のベンチマークファイルでグルーピング(groupオプション)を利用しているが、2つ目のベンチマークファイルではグルーピングを利用していないようなケースで発生していたようです。
その他にも、Exit sanitizerによるオーバーヘッドの削減が実施されています。
deno testの変更点 Deno v1.21でテストケースの実行時にログに出力された内容がキャプチャされるように改善されました。
このリリースでは、Deno.spawn()などでstdoutやstderrオプションに&amp;quot;inherit&amp;quot;を指定した際に、サブプロセスの出力内容もキャプチャされるように改善されています。
他にも、Workerの出力内容もキャプチャするように改善されています。
その他の変更点 Deno.spawn(Sync)でstdinなどのオプションに&amp;quot;piped&amp;quot;を指定した際にエラーを発生させるよう修正されました。 Worker.terminateが呼び出し元のスレッドをブロックしないように修正されました (https://github.com/denoland/deno/issues/13705) https://github.</description></item><item><title>2021/04/18〜2022/04/24の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/04/24.html</link><pubDate>Sun, 24 Apr 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/04/24.html</guid><description>Deno v1.21 Deno v1.21がリリースされました。
個別に記事を書いたので、詳しくはそちらを参照いただければと思います。
Deno v1.21 deno_std v0.136.0 deno_std v0.136.0がリリースされました。
testing/snapshot スナップショットテストを行うためのモジュールが追加されました。
このモジュールではassertSnapshotという関数が公開されており、__snapshots__ディレクトリに保存されたスナップショットと第2引数で指定された値を比較し、マッチしなかった場合、エラーが発生します。
スナップショットを読み込む必要があるため、利用には--allow-readパーミッションが必要になります。
import { assertSnapshot } from &amp;#34;https://deno.land/std@0.136.0/testing/snapshot.ts&amp;#34; Deno.test(&amp;#34;doSomething&amp;#34;, async (t) =&amp;gt; { const result = doSomething(); await assertSnapshot(t, result); }); スナップショットを更新したいときは、テストを実行する際に--updateを指定する必要があります。
この場合、スナップショットを書き込むために、追加で--allow-writeが必要になります。
# スナップショットは__snapshots__に書き込まれます $ deno test --allow-read --allow-write tests/some_test.js -- --update testing/bdd itに渡すテスト関数がTestContextを受け取るように修正されています。
import { describe, it } from &amp;#34;https://deno.land/std@0.136.0/testing/bdd.ts&amp;#34; describe(&amp;#34;sum&amp;#34;, () =&amp;gt; { it(&amp;#34;should return sum of numbers&amp;#34;, (t) =&amp;gt; { assertEquals(sum(1, 2, 3), 6, t.</description></item><item><title>2021/02/14〜2022/02/20の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/02/20.html</link><pubDate>Sun, 20 Feb 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/02/20.html</guid><description>Deno v1.19 Deno v1.19がリリースされました。
--promptオプションの挙動がデフォルト化 例えば、以下のようなファイルがあったとします。
const content = await Deno.readTextFile(&amp;#34;README.md&amp;#34;); このファイルを権限なしで実行しようとすると、下記のように権限を付与するか尋ねられるようになります。
$ deno run main.ts ⚠️ ️Deno requests read access to &amp;#34;README.md&amp;#34;. Run again with --allow-read to bypass this prompt. Allow? [y/n (y = yes allow, n = no deny)] Deno v1.18以前の挙動に戻したいときは--no-promptを指定する必要があります。
deno vendorコマンドの追加 サードパーティモジュールもバージョン管理に含めたいなどの要求を解決すべく導入されたコマンドです。
具体的な使い方としては、下記のようにエントリポイントを指定します。
$ deno vendor mod.ts これにより、vendorディレクトリにmod.tsから依存されているサードパーティモジュールが保存されます。
また、vendorディレクトリに次のような内容でimport_map.jsonが作成されます。
{ &amp;#34;imports&amp;#34;: { &amp;#34;https://deno.land/&amp;#34;: &amp;#34;./deno.land/&amp;#34;, &amp;#34;https://unpkg.com/&amp;#34;: &amp;#34;./unpkg.com/&amp;#34; }, &amp;#34;scopes&amp;#34;: { &amp;#34;./unpkg.com/&amp;#34;: { &amp;#34;./unpkg.com/puppeteer@10.2.0/lib/esm/puppeteer/common/Debug.js&amp;#34;: &amp;#34;./unpkg.com/puppeteer@10.2.0/lib/esm/puppeteer/common/Debug.js&amp;#34;, &amp;#34;./unpkg.com/puppeteer@10.2.0/lib/esm/puppeteer/common/helper.js&amp;#34;: &amp;#34;./unpkg.com/puppeteer@10.2.0/lib/esm/puppeteer/common/helper.js&amp;#34; } } } deno runを実行する際にこのImport Mapファイルを指定することで、vendorディレクトリに保存されたサードパーティモジュールを透過的に読み込むことができます。</description></item><item><title>2021/09/20〜2021/09/26の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2021/09/26.html</link><pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2021/09/26.html</guid><description>Deno v1.14.1 Deno v1.14.1がリリースされました。
このリリースはバグ修正がメインです。
変更点:
非async関数でfor-awaitを使用したときのエラーメッセージが改善されました v1.14.0で追加されたファイルロックAPIの型定義がlib.deno.ns.d.tsからlib.deno.unstable.d.tsに移動しました deno docでドキュメントを表示する際に、—unstableが必要になるなどの影響があります. (例: deno doc --builtin --unstable Deno.flock) スタックトレース中のData URLの表示が改善されました HMACキーをJSON Web Key形式でエクスポートできない問題が修正されました Deno.readFileの最適化 https://github.com/denoland/deno/releases/tag/v1.14.1
deno_std v0.108.0 deno_stdのv0.108.0がリリースされました。
変更点:
collections: maxWithとminWithに渡した配列にundefinedが含まれていた場合、要素の並び順によって結果が異なってしまう問題が修正されました
collections: maxBy, minBy, 及びsortByのselector引数でbigintやDateを返却できるように型定義が修正されました
testing/asserts: assertThrowsやassertRejectsでコールバックがサポートされました
import { assertEquals, assertRejects } from &amp;#34;https://deno.land/std@0.108.0/testing/asserts.ts&amp;#34;; await assertRejects(() =&amp;gt; { return Promise.reject(new Error(&amp;#39;foo&amp;#39;)); }, (error: Error) =&amp;gt; { assertEquals(error.message, &amp;#39;foo&amp;#39;); }); https://github.</description></item><item><title>2021/09/13〜2021/09/19の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2021/09/19.html</link><pubDate>Sun, 19 Sep 2021 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2021/09/19.html</guid><description>Deno v2のリリースプランについて Deno v2のリリースプランが公開されました。
https://github.com/denoland/deno/issues/12110 10/12にDeno v1.15, 11/22にDeno v2がリリース予定とのことです
また、GitHub Discussionsにて、v2で実施予定の追加の変更点やDenoのエコシステムの拡大に関する議論内容などについて公開されています。
追加の変更点(今後、内容が変わる可能性があります！):
NotCapableエラーの導入 DenoのパーミッションエラーとOSによって発生したパーミッションエラーを区別できるようにすることが目的のようです Deno.read()のDeno.write()などの削除 Import AssertionsとJSON Modules opメトリクスのリファクタリング/整頓 Deno 2.0 Release Plan Design Meeting 2021-09-16 Deno v1.14.0 Deno v1.14.0がリリースされました。
TypeScript v4.4への更新、deno fmtやdeno lintで設定ファイルがサポート、Web Crypto APIの強化、Deno.upgradeWebSocketの安定化、URLPatternの実装、シグナルAPI(unstable)への破壊的変更などが実施されています。
また、magurotunaさんによる日本語の紹介記事が公開されています(https://zenn.dev/magurotuna/articles/deno-release-note-1-14-0)
変更点:
deno fmt/deno lint deno fmt でJSDocコメントへの基本的なサポートが追加されました deno fmtとdeno lintの挙動を設定ファイルやCLIオプションで変更できるようになりました ネイティブHTTPサーバ Deno.upgradeWebSocketが安定化されました Deno.upgradeWebSocket でUpgradeヘッダの大文字・小文字の違いを区別しないように修正されました ネイティブHTTPサーバでリクエストボディが消費されなかった場合に発生するリソースリークが修正されました FFI Deno.</description></item><item><title>2021/08/30〜2021/09/05の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2021/09/05.html</link><pubDate>Sun, 05 Sep 2021 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2021/09/05.html</guid><description>Aleph.js v0.3.0-beta.9 Aleph.jsのv0.3.0-beta.9がリリースされました。
主な変更点として、サーバから返却されるCache-Controlの値がpublic, max-age=0, must-revalidateに変更されています。
また、このリリースに合わせてWindi CSS向けのプラグインが公開されています (https://github.com/ije/aleph-plugin-windicss)
https://github.com/alephjs/aleph.js/releases/tag/v0.3.0-beta.9 https://github.com/ije/aleph-plugin-windicss Deno Deploy Beta2 Deno DeployのBeta2がリリースされました。
変更点:
Deno.readFileによって、デプロイに紐づくGitHubリポジトリ内のファイルの読み込みがサポートされました Deno.listenとDeno.serveHttpがサポートされました インスタンスがクラッシュした際のデバッグを容易にするため、クラッシュレポートが追加されました https://deno.com/blog/deploy-beta2 Deno Deploy Beta 2が来たぞ deployctl v0.4.0 Deno Deployのコマンドラインツールであるdeployctlのv0.4.0がリリースされました。
このリリースでは、コマンドの実行時に新バージョンを通知する機能が実装されています。
また、現時点では、このバージョンをインストールする際に--unstableが必要になります。
https://github.com/denoland/deployctl/releases/tag/0.4.0
Ultra UltraというDeno+ReactベースのWebフレームワークが公開されました。
まだメジャーリリースはされていませんが、以下のような特徴があるようです。
ReactDOM.renderToReadableStreamベースのSSR Viteなどと同様のオンデマンドでのコード変換 (SWCやesbuildがベース) SWR向けのキャッシュプロパイダを提供 /examplesディレクトリに使用例があるため、もし興味がありましたら見てみるとよいかもしれません。
https://github.com/exhibitionist-digital/ultra</description></item><item><title>2021/08/23〜2021/08/29の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2021/08/29.html</link><pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2021/08/29.html</guid><description>Deno v1.13.2 Deno v1.13.2がリリースされました。
このリリースではバグ修正を中心に行われています。
変更点:
SubtleCrypto#exportKeyでHMACがサポートされました deno testの--jobsオプションで0を指定するとエラーが発生するように修正されました Deno.dlopenに不正な型の引数を渡した際に、プロセスがパニックする問題が修正されました リソースリークを防止するために、Deno.HttpConn#closeを実行した際に、該当のDeno.HttpConnオブジェクトを経由して割り当てられた全てのリソースが開放されるように修正されました deno lspでlanguageIdとしてjsxとtsxがサポートされました (Nova などのエディタが標準のlanguageIdであるjavascriptreactやtypescriptreactではなく、jsxやtsxを使用するために対応されたようです) deno lspがサポートしないlanguageIdが指定された場合、エディタ上で診断が表示されないように修正されました (deno lspが解釈できないlanguageIdをエディタが指定した場合、Denoはそのファイルをtypescriptとして解釈していたため、誤って診断が表示されてしまう問題があったようです) クラシックWorkerでsetTimeoutなどのAPIを使用するとプロセスがクラッシュする問題が修正されました URLやURLSearchParamsのパフォーマンスが向上しました deno_std v0.106.0 deno_std v0.106.0がリリースされました。
変更点:
async: delay関数でAbortSignalを使用した中断がサポートされました collection: findLastIndexでマッチする要素が見つからなかったときに-1ではなくundefinedが返却されるように修正されました testing: assertEqualsで、一方のオブジェクトにはconstructorが設定されているがもう一方には設定されていない場合に、保持しているプロパティが一致すればそれらのオブジェクトは同一と判断されるように変更されました node/buffer: 定数などのいくつかのAPIがexportされました node/perf_hooks: PerformanceEntryがdefault exportされるオブジェクトに追加されました https://github.com/denoland/deno_std/pull/1155 https://github.com/denoland/deno_std/releases/tag/0.106.0 MDNでDenoがサポートされました MDN Web Docsの「ブラウザーの互換性」欄にDenoの情報が表示されるようになりました。
あるWeb APIがDenoのどのバージョンからサポートされているかを確認することができます。
例)
https://developer.mozilla.org/ja/docs/Web/API/URL https://developer.mozilla.org/ja/docs/Web/API/TextDecoder https://deno.com/blog/deno-on-mdn
Aleph.js v0.3.0 betaバージョン Next.jsライクなフレームワークであるAleph.jsのv0.3.0 betaバージョンが公開されました。
様々な機能の追加やパフォーマンスの向上などが図られています。
主な変更点:
新しいプラグインシステムの提供 (Aleph.jsのランタイムを拡張し、コードの変換プロセスに介入したりカスタムファイルタイプのサポートなどを追加できる仕組み) deno_std/http/serverからネイティブHTTP(Deno.serveHttp)への移行 APIミドルウェアがサポートされました。api/_middlewares.</description></item></channel></rss>