<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Deno KV on 週刊Deno</title><link>https://uki00a.github.io/deno-weekly/tags/deno-kv.html</link><description>Recent content in Deno KV on 週刊Deno</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 07 Apr 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://uki00a.github.io/deno-weekly/tags/deno-kv/index.xml" rel="self" type="application/rss+xml"/><item><title>2024/04/01〜2024/04/07の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/04/07.html</link><pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/04/07.html</guid><description>Deno v1.42.1, Deno Deployのプロジェクト作成フローが改善, deno.re (GitHubベースのパッケージレジストリ), thoth (Deno KVをベースに全文検索機能を提供するパッケージ)</description></item><item><title>2024/02/12〜2024/02/18の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/02/18.html</link><pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/02/18.html</guid><description>Deno v1.40.5 (denortバイナリの再導入, DENO_FUTURE環境変数の導入), deno_std v0.216.0 (std/semverの非推奨APIの削除), fresh v1.6.4 (Twindのセットアップの再導入など), LumeCMS, denoland/deno-lambda</description></item><item><title>2024/01/22〜2024/01/28の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/01/28.html</link><pubDate>Sun, 28 Jan 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/01/28.html</guid><description>Deno v1.40, `deno_std`でのワークスペースの導入について, deno_std v0.213.0 (非推奨APIの削除など), std/kvについて, Oak 13.0.0 (Fetch APIとの互換性の向上など), Denoの静的サイトジェネレータ`Lume`の紹介</description></item><item><title>2024/01/01〜2024/01/07の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/01/07.html</link><pubDate>Sun, 07 Jan 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/01/07.html</guid><description>Deno v1.39.2 (BYONMとImport Mapsの併用がサポート, deno lspでV8インスペクターへの接続がサポート, など), deno_std v0.211.0 (std/httpなどから非推奨APIが削除, std/semverの一部APIの非推奨化など), WASMやBlobなどのimportについて, unstable APIの型チェックに関する挙動の変更について, 「RustでWebバックエンドを書き始めてから1年くらい経った」</description></item><item><title>2023/12/18〜2023/12/24の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/12/24.html</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/12/24.html</guid><description>Deno v1.39.1 (Deno.serveのUnixドメインソケットサポートの安定化, deno coverageでディレクトリの指定が省略可能に, など...), deno_std v0.210.0 (cli/spinnerの追加, std/logでJSONL形式でのロギングがサポートなど), RxDBがDenoとDeno KVをサポート, 「DenoとFreshでペアプロ・モブプロ用タイマー『timer.team』を開発して得た知見⏰」, 「Honoの今の状況」</description></item><item><title>2023/12/11〜2023/12/17の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/12/17.html</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/12/17.html</guid><description>Deno v1.39, deno_std v0.209.0 (std/webgpuやstd/netの追加など), `Deno.Kv.watch`のアナウンス, `@deno/kv`パッケージの解説, Deno KVのベンチマーク</description></item><item><title>Deno v1.39</title><link>https://uki00a.github.io/deno-weekly/articles/deno/v1.39.html</link><pubDate>Sun, 17 Dec 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/deno/v1.39.html</guid><description>WebGPU APIの再導入, deno coverageでHTMLレポーターがサポート, Deno.cronでオブジェクト形式でのスケジューリングがサポート, Deno.Kvのenqueueでリトライポリシーをカスタマイズできるように, deno compileでBYONMがサポート, sloppy importsのサポートなど, TypeScript v5.3へのアップデート, など</description></item><item><title>2023/12/04〜2023/12/10の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/12/10.html</link><pubDate>Sun, 10 Dec 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/12/10.html</guid><description>Deno v1.38.5 (Deno.Kv.watchが実装), --unstable-sloppy-importsについて, fresh v1.6.1 (Tailwind CSSプラグインの改善など), deployctl v1.9.0 (deno.jsonによる設定やプロジェクト名の推論などがサポート), denokv v0.6.0 (Node.js向けに@deno/kvパッケージが公開), lume v2 (UnoCSSプラグインの追加やAPIの整理など)</description></item><item><title>2023/11/06〜2023/11/12の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/11/12.html</link><pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/11/12.html</guid><description>Deno v1.38.1がリリース (Node.js互換性やdeno doc --lintなどの改善) / deno_std v0.206.0 (std/async/deferredやstd/path/glob.tsなどが非推奨化, std/http/server_sent_event_streamが追加, std/textが追加), denokv v0.2.0 (S3を活用したレプリケーション、PITRの実装), HonoとDenoで社内ツールを作ってみた</description></item><item><title>2023/10/30〜2023/11/05の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/11/05.html</link><pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/11/05.html</guid><description>Deno v1.38がリリース, deno_std v0.205.0 (std/http/server.tsやstd/wasiの非推奨化など), denokv v0.1.0 (SQLiteベースのKV Connectプロトコルサーバーが実装), vite-deno-plugin, unyt.land, Deno Advent Calendar 2023</description></item><item><title>Deno v1.38</title><link>https://uki00a.github.io/deno-weekly/articles/deno/v1.38.html</link><pubDate>Sun, 05 Nov 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/deno/v1.38.html</guid><description>Deno v1.38がリリースされました。deno docでリント(--lint)やHTMLページの生成(--html)がサポート / Deno本体でHMRがサポート。(--unstable-hmr) / --unstable-*がサポート / deno.jsonでunstableフィールドがサポート / `compilerOptions.jsx`で`&amp;#34;precompile&amp;#34;`がサポート / .envのサポート (--envオプション) / Deno.cronが実装 / npmなどで作成されたnode_modulesのサポート (BYONM) など...</description></item><item><title>2023/10/23〜2023/10/29の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/10/29.html</link><pubDate>Sun, 29 Oct 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/10/29.html</guid><description>denoland/denokv, BYONMのサポートについて (--unstable-byonm), --unstable-ffi/--unstable-kvなどのオプションの導入について, awesome-deno-kv, Deno Festのアーカイブが公開</description></item><item><title>2023/09/25〜2023/10/01の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/10/01.html</link><pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/10/01.html</guid><description>Deno v1.37.1 (deno lspの改善, Deno.jupyter.broadcastの追加など), deno_std v0.203.0 (std/ioの非推奨化など), denoland/deno-astro-adapter, Deno Queuesのアナウンス, Molt (依存関係のアップデートツール)</description></item><item><title>2023/09/11〜2023/09/17の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/09/17.html</link><pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/09/17.html</guid><description>deno jupyterコマンドについて, using/await usingのサポートについて, Denoの新しいドキュメンテーションサイト(docs.deno.com), How We Built Deno KV using FoundationDB...</description></item><item><title>2023/09/04〜2023/09/10の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/09/10.html</link><pubDate>Sun, 10 Sep 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/09/10.html</guid><description>Deno v1.37に入りそうな変更について, Deno Deployでnpmパッケージがサポート, Deno KVのオープンベータ版が公開, fresh v1.4.3 (Route Groupsなどに関するバグ修正), など...</description></item><item><title>2023/08/28〜2023/09/03の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/09/03.html</link><pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/09/03.html</guid><description>Deno v1.36.4がリリース。(Deno KVでリモートデータベースへの接続がサポート、`deno lsp`で`deno.suggest.completeFunctionCalls`が実装), deno_std v0.201.0がリリース (`std/dotenv`でのパーミッションの取り扱いの改善、使用率の低いモジュールの非推奨化), など...</description></item><item><title>2023/08/21〜2023/08/27の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/08/27.html</link><pubDate>Sun, 27 Aug 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/08/27.html</guid><description>Deno v1.36.2がリリース。(Deno KVでエントリの有効期間の設定がサポート、FFI関連のAPIをより型安全に扱えるよう改善に、など...), SimpleWebAuthn v8.0.0, など...</description></item><item><title>2023/08/14〜2023/08/20の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/08/20.html</link><pubDate>Sun, 20 Aug 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/08/20.html</guid><description>fresh v1.4がリリース。Deno KVでのキーの有効期限の設定について</description></item><item><title>2023/06/19〜2023/06/25の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/06/25.html</link><pubDate>Sun, 25 Jun 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/06/25.html</guid><description>Fresh Devtools Fresh本体にFresh Devtoolsという開発者ツールを実装することが検討されているようです。
Fresh Devtools #1321
経緯としては、Freshのバックエンドで動作する各種ハンドラなどはPreact Devtoolsではカバーしきれないという課題などの解消が狙われているようです。
また、Nuxt DevToolsのように、Freshアプリケーションの一部として開発者ツールをレンダリングできるようにすることなども考慮されているようです。
例えば、このFresh Devtoolsでroutesタブやpluginsタブ、Preact Devtools向けのタブなどを提供することで、生産性やデバッグなどのサポートをすることが構想されています。
denoland/kv_api Deno KVのデータをREST API経由で管理できるようにしてくれるモジュールが公開されています。
denoland/kv_api 現状はFreshのみがサポートされていますが、今後、Oakのサポートが追加されることも検討されているようです。
deno_std/msgpack deno_stdにMessagePackのサポートを追加するPRが作成されています。
feat: msgpack encoding #3460
まだマージはされていませんが、近いタイミングでリリースされる可能性もあるかもしれません。
Global database comparison Deno KVやDynamoDBなどのDeno Deployからの利用に適していると考えられる各種データベースについて、詳しく比較を行っているWebページが公開されています。
https://global-db-comparison.deno.dev/</description></item><item><title>2023/06/12〜2023/06/18の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/06/18.html</link><pubDate>Sun, 18 Jun 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/06/18.html</guid><description>fresh v1.2 fresh v1.2がリリースされました。
変更内容について以下のページにまとめたため、よろしければ参照いただければと思います。
fresh v1.2 Deno v1.34.3 Deno v1.34.3がリリースされました。
Deno KVにキューが実装 Deno.KvにenqueueとlistenQueueメソッドが追加されています。
const kv = await Deno.openKv(&amp;#34;:memory:&amp;#34;); // メッセージを追加します。 const res = await kv.enqueue({ id: 1, payload: &amp;#34;foo&amp;#34; }); assert(res.ok); let message; // キューを購読します const listenPromise = kv.listenQueue((_message) =&amp;gt; { message = _message; }); kv.close(); await listenPromise; // closeするとresolveされます console.info(message); // Output: { id: 1, payload: &amp;#34;foo&amp;#34; } Deno.Kv.enqueueには以下のオプションを指定できます。
オプション 説明 keysIfUndelivered メッセージの処理に失敗した際にKVに設定したいエントリを指定できます delay 配送までの遅延時間を指定できます(最大で1週間まで指定できて、デフォルトは0です) listenQueueに渡したコールバックが失敗した際は、自動的にリトライされます。(リトライ回数は最大で5回のようです)</description></item><item><title>2023/05/29〜2023/06/04の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/06/04.html</link><pubDate>Sun, 04 Jun 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/06/04.html</guid><description>Deno v1.34.1 Deno v1.34.1がリリースされました。
deno compile DENO_DIRが読み取り専用であった際に、deno compileで作ったバイナリがうまく動かない問題が修正されました。 npmパッケージ内に含まれるファイルを読む際に、deno compileに--allow-readを指定しているにも関わらず、バイナリの実行時に再度--allow-readが求められる問題が修正されました。 Node-API napi_get_cb_infoでdata引数が適切に取り扱われるように改善されました。
Deno.createHttpClient オプションとしてhttp2: falseとhttp1: trueの両方が指定された場合に、ALPNでh2が指定されないように修正されました。
denoland/deno_kv_oauth Deno公式で、Deno KVをベースにOAuthのアクセストークンやセッションなどの管理を行ってくれるモジュールが公開されています。
https://github.com/denoland/deno_kv_oauth ロードマップについては、以下で公開されています。
https://github.com/denoland/deno_kv_oauth/issues/1 window変数の削除について Deno 2.0でwindow変数の削除が検討されているようです。
remove window variable #13367 背景としては、既存のライブラリにはwindow変数の有無に応じて現在の環境(ブラウザ or Node.js)を判断しているものが多く存在し、Denoでそういったライブラリを利用する際に、意図せずしてブラウザであると判定されてしまうことを防ぎたい、という狙いがあるようです。
次のマイナーリリースであるDeno 1.35では、window変数が参照された際に警告を表示する変更を入れることが検討されているようです。
feat(runtime): log deprecated message on first usage of window global #19319 esbuild_deno_loader v0.8.0 esbuild_deno_loader v0.8.0がリリースされました。
npm:URLやnode_modulesのサポートが行われています。
&amp;quot;native&amp;quot;ローダーでは、通常のDenoにおけるnpm:などと同様に、依存するnpmパッケージはDenoのグローバルキャッシュ(DENO_DIR)から読み込みやダウンロードなどが行われるようです。
ただし、Deno Deployなどでも動作する&amp;quot;portable&amp;quot;ローダーでは、--node-modules-dirなどによって事前にnode_modulesディレクトリが作成されていないと動作しないなどの制限があるようです。
freshでのnpm:サポート またマージはされていませんが、esbuild_deno_loader v0.8.0を活用してfreshにnpm:のサポートを入れる対応が進められているようです。
feat: limited npm: specifier support #1245</description></item><item><title>2023/05/15〜2023/05/21の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/05/21.html</link><pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/05/21.html</guid><description>Deno v1.33.4 Deno v1.33.4がリリースされました。
Node.js互換性の改善 組み込みモジュールの改善
node:crypto: getDiffieHellman/createDiffieHellmanが実装されました。 node:url: formatにURLオブジェクトを渡した際に、適切にフォーマットが行われなかった問題が修正されました。 node:child_process: spawnのstdioオプションにStreamを渡せるようになりました。 これによりnpm-run-all が動くようになったようです。 Node-API
napi_add_finalizerが実装されました。 BigInt関連のAPIの互換性が改善されています。 npm
optionalDependenciesのサポートが改善されています。
Deno KV Deno.Kv.close()の戻り値の型定義がPromise&amp;lt;void&amp;gt;からvoidへ変更されました。(実装は修正されていませんが、TypeScriptの型定義に誤りがあったようです)
Deno.serve()のバグ修正 リクエストがキャンセルされると、Denoがパニックすることがある問題が修正されました。
Web API BroadcastChannelの型定義がlib.deno.unstable.d.tsへ移動されました。 unstable APIであるにも関わらず、--unstableなしでも型定義を参照できてしまう問題があったようです。 WebSocketで短い時間内で多くのメッセージを送信すると、いくつかのメッセージが失われることがある問題が修正されました。 fetch()でIPアドレスを指定してHTTPSリクエストを送信する(例: https://1.1.1.1/)とエラーが発生する問題が解消されました。 deno_std v0.188.0 deno_std v0.188.0がリリースされました。
std/flags collectとdefaultを併用した際に、オプションにネストされた配列が設定される問題が修正されました。
import { parse } from &amp;#34;https://deno.land/std@0.188.0/flags/mod.ts&amp;#34;; const options = parse([], { collect: [&amp;#34;values&amp;#34;], default: { values: [&amp;#34;foo&amp;#34;, &amp;#34;bar&amp;#34;], }, }); console.</description></item><item><title>2023/05/01〜2023/05/07の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/05/07.html</link><pubDate>Sun, 07 May 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/05/07.html</guid><description>Deno v1.33.2 Deno v1.33.2がリリースされました。
Deno KV Deno.KvU64にvalueOf/toStringが実装されました。
assert(new Deno.KvU64(1n) + 2n === 3n); assert(new Deno.KvU64(123n).toString() === &amp;#34;123&amp;#34;); また、Deno.Kvのコンストラクタを直接呼ぶと、エラーが発生するように変更されました。(Deno.openKvの使用が推奨されるため)
Node.js互換性 node:process: process.releaseが実装されました。 node:http: ClientRequest.setTimeoutに0を渡すとタイムアウトが無効化されるように修正されました。 その他 パフォーマンス向上のため、Windows以外の環境では、グローバルアロケータやArrayBufferの割り当ての用途としてjemallocが使用されるように変更されました。 beforeunloadのリスナ内でpreventDefaultを呼んでいると、Deno.test内で発生したUncaught Errorが画面に表示されなくなる問題が修正されました。 WebSocketクライアントが適切にクローズされなかった場合、WebSocketサーバがハングする問題が修正されました。 引数なしでURL.canParse()が呼ばれた際に、falseを返すのではなくTypeErrorが発生するように修正されました。 deno_std v0.186.0 deno_std v0.186.0がリリースされました。
std/path sepが非推奨化されました。
今後はSEPの使用が推奨されます。
std/async deadline.ts: signalオプションによるキャンセルがサポートされました。 pool.tsがブラウザ互換になりました。 std/http/method.tsの追加 isHttpMethodで与えられた文字列が正しいHTTPメソッドであるか判定できます。
import { isHttpMethod } from &amp;#34;https://deno.land/std@0.186.0/http/method.ts&amp;#34;; assert(isHttpMethod(&amp;#34;GET&amp;#34;)); assert(isHttpMethod(&amp;#34;POST&amp;#34;)); assert(!isHttpMethod(&amp;#34;get&amp;#34;)); assert(!isHttpMethod(&amp;#34;foo&amp;#34;)); std/http/file_server.ts Rangeヘッダが仕様どおりにハンドリングされるように改善されました。
std/http/server.ts serve()ですでに使用中のportを指定した際に、たまにAddrInUseではなくTypeError: Cannot read properties of undefined (reading 'port')が発生する問題が修正されました。</description></item><item><title>2023/04/24〜2023/04/30の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/04/30.html</link><pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/04/30.html</guid><description>Deno v1.33 Deno v1.33がリリースされました。
以下に内容をまとめたため、よろしければそちらを参照いただければと思います。
Deno v1.33 Deno v2.0について Deno v1.33のリリースノートでDeno v2.0のリリース時期について書かれています。
https://deno.com/blog/v1.33 数カ月後にリリースが予定されているようです。
それまでの間、今後のマイナーリリースではパフォーマンスやNode.js互換性、セキュリティなどの改善が行われる想定のようです。
deno_std v0.185.0 deno_std v0.185.0がリリースされました。
std/uuid: UUID v3のサポート std/uuid/v3.tsが実装されています。
MD5を利用してUUIDを生成するgenerate()や、UUIDの検証をするvalidate()が提供されています。
std/dotenv: --allow-envなしでの読み込みがサポート restrictEnvAccessToオプションに空の配列やnullまたはundefinedを指定した際に、環境変数を参照せずに.envの内容のみが読み込まれるようになりました。
この場合、--allow-envの指定が不要になります。
esbuild_deno_loader v0.7.0 esbuild_deno_loader v0.7.0がリリースされました。
v0.6.0で提供されていたdenoPluginが以下のように2つのプラグインに分割されています。
denoResolverPlugin: Import mapsを考慮した上でspecifierを解決する denoLoaderPlugin: denoResolverPluginが解決したspecifierを元にモジュールを読み込む プラグインを分割することにより、カスタムのスキーマや拡張子などをサポートできるようになったようです。
例えば、以下ではカスタムのemoji:スキーマをサポートする例が紹介されています。
examples/custom_scheme_plugin.ts また、configPathとimportMapURLオプションが追加されており、これらにより各プラグインが利用するdeno.jsonやImport Mapsファイルへのパスを指定することができるようです。
Deno KV Deno KVのホームページが正式に公開されました。
https://deno.com/kv @ayame113さんによるDeno KVの解説記事も公開されています。
Deno KV 正式発表！cloudflare KVとcloudflare D1のいいとこ取り？</description></item><item><title>Deno v1.33</title><link>https://uki00a.github.io/deno-weekly/articles/deno/v1.33.html</link><pubDate>Sun, 30 Apr 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/deno/v1.33.html</guid><description>Deno v1.33がリリースされました。
この記事では主な変更点などについて解説します。
dynamic importに関するパーミッションチェックの見直し 静的に解析可能なdynamic importの実行時に、パーミッションが要求されないように挙動が変更されました。
このリリース以降、以下のコードを実行する際に--allow-netの指定が不要になります。(v1.32までは--allow-netが要求されます)
const { delay } = await import(&amp;#34;https://deno.land/std@0.185.0/async/delay.ts&amp;#34;); await delay(3000); ただし、以下のようにURLを動的に構築している場合などは、従来通り--allow-netの指定が必要です。
// Denoが`import()`の引数を静的に解析できない場合は、従来どおりパーミッションが要求されます const { delay } = await import(`https://deno.land/std@0.185.0/async/${&amp;#34;delay.ts&amp;#34;}`); await delay(3000); Deno KV Deno.AtomicOperationにmin/maxメソッドが追加 minは引数で指定された値と現在の値を比較し、小さい方の値でエントリを上書きします。maxはその逆の操作です。
const kv = await Deno.openKv(&amp;#34;:memory:&amp;#34;); const result = await kv.set([&amp;#34;key&amp;#34;], new Deno.KvU64(1n)); const commitResult = await kv.atomic() .check({ key: [&amp;#34;key&amp;#34;], versionstamp: result.versionstamp }) .max([&amp;#34;key&amp;#34;], 2n) .commit(); assert(commitResult.ok); const result2 = await kv.</description></item><item><title>2023/04/17〜2023/04/23の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/04/23.html</link><pubDate>Sun, 23 Apr 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/04/23.html</guid><description>Deno v1.32.5 Deno v1.32.5がリリースされました。
KV Deno.AtomicOperation.sumが実装されました。
const kv = await Deno.openKv(&amp;#34;:memory:&amp;#34;); const result = await kv.set([&amp;#34;key&amp;#34;], new Deno.KvU64(1n)); const ok = await kv.atomic() .check({ key: [&amp;#34;key&amp;#34;], versionstamp: result.versionstamp }) .mutate({ type: &amp;#34;sum&amp;#34;, key: [&amp;#34;key&amp;#34;], value: new Deno.KvU64(2n) }) .commit(); assert(ok); const result2 = await kv.get([&amp;#34;key&amp;#34;]); assert(result2.value instanceof Deno.KvU64); assert(result2.value.value === 3n); Node.js互換性 node:http: ClientRequest.socket.remoteAddressが実装されました node:crypto: createVerifyが実装されました node:path: fromFileUrlなどのNode.jsでは提供されないシンボルがexportされていた問題が修正されました npm: ロックファイルで指定されたバージョンがキャッシュに見つからなかった場合に、そのバージョンのパッケージをダウンロードするように挙動が変更されました (このような場合、今まではエラーが起きていました) バグ修正 deno lsp: Unix系のOSでstatusページが返ってこなくなっていた問題が修正されました deno test --watchの実行中にSIGINTを送信しても、プロセスを停止できない問題が修正されました Deno.</description></item><item><title>2023/04/10〜2023/04/16の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/04/16.html</link><pubDate>Sun, 16 Apr 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/04/16.html</guid><description>Deno v1.32.4 Deno v1.32.4がリリースされました。
Deno v1.32.2以降、Freshが動かなくなっていた問題が解消されています。(#18572)
Node.js互換性 node:cryptoで以下のAPIが実装されています:
X509Certificate generateKey hkdf 特定のnpmパッケージのバージョンを更新しようとすると、以下のエラーが起きる問題が解消されています。
Could not find npm package &amp;#39;&amp;lt;package&amp;gt;’ matching &amp;lt;version&amp;gt;. Try retrieving the latest npm package information by running with --reload deno cache --reload npm:&amp;lt;package&amp;gt;を実行すると、依存している全npmパッケージが再インストールされる問題が解消されています。
KV Deno.Kvの各メソッドで、キーに配列以外の値を渡せないように挙動が変更されました。
例えば、今まではkv.get(&amp;quot;key&amp;quot;)のような呼び方ができましたが、今後はkv.get([&amp;quot;key&amp;quot;])のように呼ぶ必要あります。
Cache API プログラムの実行をまたいで同一のリクエストに対して複数回Cache.putを呼んだ際に、値がうまく上書きされなくなる問題が修正されています (#18649)
deno_std v0.183.0 deno_std v0.183.0がリリースされました。
std/encoding/varint/の削除 非推奨化されていたstd/encoding/varint/が削除されました。
deno_std v0.179.0でstd/encoding/varint.tsにTypeScriptベースのAPIが追加されているため、今後はこれらの使用が推奨されます。
std/csv 破壊的変更
CsvStreamがCsvParseStreamへリネームされています。(CsvStreamはまだ削除はされていないものの、非推奨化されています)
この変更はJsonParseStream/JsonStringifyStreamを提供するstd/jsonとの一貫性の向上を目的としています。
parse()などのAPIの型定義が改善されています。
具体的には、以下のように型推論が効くように変更されています。
import { parse } from &amp;#34;https://deno.land/std@0.183.0/csv/parse.ts&amp;#34;; const records: Array&amp;lt;Record&amp;lt;&amp;#34;id&amp;#34; | &amp;#34;name&amp;#34;, string&amp;gt;&amp;gt; = parse(&amp;#34;1,a\n2,b&amp;#34;, { columns: [&amp;#34;id&amp;#34;, &amp;#34;name&amp;#34;], }); std/http/etag.</description></item><item><title>2023/03/27〜2023/04/02の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/04/02.html</link><pubDate>Sun, 02 Apr 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/04/02.html</guid><description>Deno v1.32.2 Deno v1.32.2がリリースされました。
KV (Deno.Kv) Deno.KvCommitResult型が追加されています。
これには、KVにコミットされた値に設定された新しいversionstampが含まれます。
この追加に合わせて、以下の変更も実施されています。
Deno.AtomicOperation.commitの戻り値がPromise&amp;lt;boolean&amp;gt;からPromise&amp;lt;Deno.KvCommitResult | null&amp;gt;に変更されています。(コミット成功時はDeno.KvCommitResult、失敗時はnullが返却されます) Deno.Kv.setの戻り値がPromise&amp;lt;void&amp;gt;からPromise&amp;lt;KvCommitResult&amp;gt;に変更されています。 Deno.KvEntryMaybeが追加されています。(この型の実体はDeno.KvEntry&amp;lt;T&amp;gt; | { key: Deno.KvKey, value: null, versionstamp: null }のaliasです)
これに合わせて、以下のAPIに型引数を指定できるように変更されました。
Deno.KvListIterator → Deno.KvListIterator&amp;lt;T&amp;gt; Deno.KvEntry → Deno.KvEntry&amp;lt;T&amp;gt; これらの変更により、エントリを取得する際に値の型を指定できるようになりました。
const entry: Deno.KvEntryMaybe&amp;lt;string&amp;gt; = await kv.get&amp;lt;string&amp;gt;([&amp;#34;str&amp;#34;]); const entries: [Deno.KvEntryMaybe&amp;lt;string&amp;gt;, Deno.KvEntryMaybe&amp;lt;number&amp;gt;] = await kv.getMany&amp;lt;[string, number]&amp;gt;([[&amp;#34;str&amp;#34;], [&amp;#34;n&amp;#34;]]); Deno.Kv#getManyが実装されました。
複数のエントリをまとめて取得できます。
await kv.set([&amp;#34;key&amp;#34;, 1], &amp;#34;foo&amp;#34;); await kv.set([&amp;#34;key&amp;#34;, 2], &amp;#34;bar&amp;#34;); const entries = await kv.getMany([ [&amp;#34;key&amp;#34;, 1], [&amp;#34;key&amp;#34;, 2] ]); assert(entries.</description></item><item><title>Deno v1.32</title><link>https://uki00a.github.io/deno-weekly/articles/deno/v1.32.html</link><pubDate>Sun, 26 Mar 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/deno/v1.32.html</guid><description>Deno v1.32がリリースされました。
この記事では主な変更点などについて解説します。
WebGPU APIの削除 Deno v1.8で追加されたWebGPU APIが削除されました。
バイナリサイズや起動速度に影響があったというのが理由のようです。
ただし、削除は一時的なもののようで、将来的には再びWebGPU APIが追加される想定のようです。
KVストア Deno本体にKVストアが実装されています。
ただし、こちらについてはまだ公式では紹介などはされておらず、今後、APIなどに大きな変更が入る可能性もあります。
詳細については、以下の記事を参照いただければと思います。
Deno v1.32でKVストアが実装されました TypeScript TypeScript v5.0.2へのアップデート Deno内部に搭載されているTypeScriptがv5.0.2へアップデートされました。
ただし、制限として、ES Decoratorsのサポートについては現時点では除外されているようです。
--allを指定しなかった際の初回の型チェックの実行が高速化 Denoでは型チェックの実行結果をSQLiteにキャッシュしておくことで、型チェックの効率化を図っています。
しかし、初回の型チェック実行時についてはこのキャッシュの仕組みが効かないため、型チェックの実行効率が少し落ちてしまいます。
この問題を解消するために、--allが指定されていない際は、ローカルのファイルのみを型チェックするように挙動が変更されました。
これによって、キャッシュが効いていない場合でも、場合によっては2倍程度の高速化が見られることもあるようです。
CLIに関する改善 deno compileでdynamic importとWeb Workerがサポート deno compileでdynamic importとWeb Workerを使用したコードのバイナリが作成できるようになりました。
例えば、以下のようなファイルがあったとします。
// sum.js export function sum(...numbers) { return numbers.reduce((a, b) =&amp;gt; a + b, 0); } // main.js const { sum } = await import(&amp;#34;./sum.js&amp;#34;); console.info(sum(1, 2, 3)); このようにシンプルなケースでは、特に設定などは不要でうまく動いてくれます。
$ deno compile -o main main.</description></item><item><title>2023/03/13〜2023/03/19の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/03/19.html</link><pubDate>Sun, 19 Mar 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/03/19.html</guid><description>Deno v1.31.3 Deno v1.31.3がリリースされました。
CLI/APIに関する改善 deno infoとdeno docコマンドで--no-lock/--lockオプションがサポートされました。(挙動はdeno runコマンドなどと同様です) deno.jsonなどでcompilerOptions.typesエントリが定義されていると、型エラーが起きる問題が修正されています。 REPLでglobalThis.Denoやその配下で定義されたプロパティを削除しようとすると、プロセスがパニックする問題が修正されています。 Deno.makeTempFile(Sync)でファイルがすでに存在した際にリトライが行われるように挙動が改善されています。 Deno.serveHttp()でレスポンスエラーが発生した際に、nextRequestから返されるRequestのsignalがabortedに設定されるように修正されました。 Node.js互換性に関する改善 package.jsonが存在する または --node-modules-dirオプションが指定されたが、実行されたスクリプトではnpmパッケージがimportされていない場合に、node_modulesが作成されないように挙動が改善されました。 node_modulesのセットアップ中にプログレスバーが表示されるように挙動が改善されました。(#18136) node:crypto: createCipheriv()が実装されました。 (aes-128-cbcのみサポート) node:fs: writeFile()でencoding: &amp;quot;ascii&amp;quot;オプションがサポートされました。 https://github.com/denoland/deno/releases/tag/v1.31.3
deno_std v0.180.0 deno_std v0.180.0がリリースされました。
std/encoding関連モジュールのディレクトリ構造の見直し (破壊的変更) std/encodingで提供されていたcsv/front_matter/json/jsonc/toml/yamlモジュールが、トップレベルのモジュールとして独立しました。
今後は、例えば、csvモジュールを利用したい場合はstd/csv/mod.ts、yamlモジュールを利用したい場合はstd/yaml/mod.tsから読み込む必要があります。
ディレクトリの移動に合わせて、以下の変更も実施されています。
csvモジュールの細分化 以下のファイルが追加されており、必要なAPIのみを個別に読み込めるようになりました。 csv/stringify.ts csv/parse.ts csv/stream.ts jsonモジュールの細分化 以下のファイルが追加されており、必要なAPIのみを個別に読み込めるようになりました。 json/json_parse_stream.ts json/json_stringify_stream.ts json/concatenated_json_parse_stream.ts tomlモジュールの細分化 以下のファイルが追加されており、必要なAPIのみを個別に読み込めるようになりました。 toml/parse.ts toml/stringify.ts std/http/server_sent_event.</description></item></channel></rss>