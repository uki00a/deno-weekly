<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Hono on 週刊Deno</title><link>https://uki00a.github.io/deno-weekly/tags/hono.html</link><description>Recent content in Hono on 週刊Deno</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sun, 10 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://uki00a.github.io/deno-weekly/tags/hono/index.xml" rel="self" type="application/rss+xml"/><item><title>2025/08/04〜2025/08/10の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2025/08/10.html</link><pubDate>Sun, 10 Aug 2025 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2025/08/10.html</guid><description>`deno.json`でのパーミッションセットの定義について, FreshのViteプラグインが公開 (`@fresh/plugin-vite`), Hono v4.9.0 (`hono/deno` - プラグインの導入に伴う`toSSG()`における各種フックの非推奨化, `hono/client` - `parseResponse()`の追加, `hono/jwt` - `iss`の検証がサポート, など)</description></item><item><title>2025/06/16〜2025/06/22の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2025/06/22.html</link><pubDate>Sun, 22 Jun 2025 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2025/06/22.html</guid><description>OpenTelemetryサポートの安定化について, `deno publish`でのnpmパッケージの公開について, Freshにおける`esbuild_deno_loader`から`@deno/esbuild-plugin`への移行について, Hono v4.8.0 (`hono/route`が追加, `hono/ssg`でプラグインシステムが実装, `@hono/mcp`パッケージの追加, など)</description></item><item><title>2025/02/03〜2025/02/09の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2025/02/09.html</link><pubDate>Sun, 09 Feb 2025 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2025/02/09.html</guid><description>Deno v2.2のリリースタイミングと直近の変更について (deno lintのJavaScriptプラグイン, node:sqliteの実装, deno outdatedでの対話的更新のサポート), `typescript-runtime-type-benchmarks`にDenoが追加, Hono v4.7.0 (`hono/proxy`, `hono/language`及び`hono/jwk`が追加)</description></item><item><title>2024/10/07〜2024/10/13の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/10/13.html</link><pubDate>Sun, 13 Oct 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/10/13.html</guid><description>Deno v2がリリース (LTSリリースチャネルとDeno for Enterpriseが正式に発表), deno_stdのリリース (@std/cborの追加, @std/collectionsでのIterableサポートの拡充, など), UnJSにおけるDenoサポートについて</description></item><item><title>2024/07/15〜2024/07/21の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/07/21.html</link><pubDate>Sun, 21 Jul 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/07/21.html</guid><description>Denoの@ts-typesと@ts-self-typesプラグマについて, deno_stdのリリース (@std/{async,cli,text,ulid}@1.0.0がリリース, など), Hono v4.5.0 (IP制限などに関するミドルウェアの追加, hono/jsxでReact v19関連のフックが追加, @hono/react-compat, など)</description></item><item><title>2024/05/27〜2024/06/02の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/06/02.html</link><pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/06/02.html</guid><description>Deno v1.44がリリース, @std/uuid@0.224.3, @std/data-structures@0.225.0, Hono v4.4.0 (JSRにパッケージが公開)</description></item><item><title>2024/05/13〜2024/05/19の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/05/19.html</link><pubDate>Sun, 19 May 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/05/19.html</guid><description>Deno v1.43.4 (deno publishやNode.js互換性の改善など), Deno v1.43.5, @std/collections@0.224.2 (invertとinvertByの追加), freshのホームページの新デザイン, @cross - Cross-Runtime JavaScript Libraries, The Deno Standard Library is now available on JSR (deno_stdのバージョン管理やDenoのワークスペース機能についてなど), DenoでHonoやReactを使ったテンプレートを作ってみた</description></item><item><title>2024/02/12〜2024/02/18の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/02/18.html</link><pubDate>Sun, 18 Feb 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/02/18.html</guid><description>Deno v1.40.5 (denortバイナリの再導入, DENO_FUTURE環境変数の導入), deno_std v0.216.0 (std/semverの非推奨APIの削除), fresh v1.6.4 (Twindのセットアップの再導入など), LumeCMS, denoland/deno-lambda</description></item><item><title>2024/02/05〜2024/02/11の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/02/11.html</link><pubDate>Sun, 11 Feb 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/02/11.html</guid><description>Deno v1.40.4, deno_std v0.215.0, dax v0.39.0 (npmパッケージが公開), esbuild_deno_loader v0.9.0 (jsr:のサポートなど), Slint v1.4.0 (Denoがサポート), Hono v4 (hono/ssg, hono/jsx/dom, HonoX), Oak v13.1.0 (Fetch APIとの相互運用性の改善)</description></item><item><title>2024/01/29〜2024/02/04の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2024/02/04.html</link><pubDate>Sun, 04 Feb 2024 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2024/02/04.html</guid><description>dax v0.38.0 (サブシェル、リダイレクト、パイプなどのサポート), Hono v4について, Deno in 2023, Deno v1.40.3 (navigator.gpu.getPreferredCanvasFormatの実装など), deno_std v0.214.0 (非推奨モジュール・APIの削除など)</description></item><item><title>2023/12/25〜2023/12/31の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/12/31.html</link><pubDate>Sun, 31 Dec 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/12/31.html</guid><description>Temporal APIのサポートについて, Danet v2 (Honoへの移行やパフォーマンス改善など), Netzo</description></item><item><title>2023/12/18〜2023/12/24の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/12/24.html</link><pubDate>Sun, 24 Dec 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/12/24.html</guid><description>Deno v1.39.1 (Deno.serveのUnixドメインソケットサポートの安定化, deno coverageでディレクトリの指定が省略可能に, など...), deno_std v0.210.0 (cli/spinnerの追加, std/logでJSONL形式でのロギングがサポートなど), RxDBがDenoとDeno KVをサポート, 「DenoとFreshでペアプロ・モブプロ用タイマー『timer.team』を開発して得た知見⏰」, 「Honoの今の状況」</description></item><item><title>2023/11/06〜2023/11/12の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/11/12.html</link><pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/11/12.html</guid><description>Deno v1.38.1がリリース (Node.js互換性やdeno doc --lintなどの改善) / deno_std v0.206.0 (std/async/deferredやstd/path/glob.tsなどが非推奨化, std/http/server_sent_event_streamが追加, std/textが追加), denokv v0.2.0 (S3を活用したレプリケーション、PITRの実装), HonoとDenoで社内ツールを作ってみた</description></item><item><title>2023/10/02〜2023/10/08の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/10/08.html</link><pubDate>Sun, 08 Oct 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/10/08.html</guid><description>WebGPU APIの再導入について, denoland/terraform-provider-deno (Deno公式のTerraformプロパイダー), Ree.js - Bun/Deno/Node.jsなどで動作する軽量Webフレームワーク</description></item><item><title>2023/04/03〜2023/04/09の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2023/04/09.html</link><pubDate>Sun, 09 Apr 2023 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2023/04/09.html</guid><description>Flashの削除について まだリリースはされていませんが、Deno v1.25で実装されたFlashというHTTPサーバを削除する対応が実施されているようです。
refactor: remove &amp;ldquo;ext/flash&amp;rdquo; #18578 これに伴い、Flashを起動するためのAPIであったDeno.serve()についても、一時的にDeno.serveHttp()ベースの実装へ書き換えられています。
refactor: &amp;ldquo;Deno.serve()&amp;rdquo; API uses &amp;ldquo;Deno.serveHttp()&amp;rdquo; internally #18568 Deno.serve()については、現在、上記とは別に改めてhyperベースの実装への書き換えが試みられているようです。
Extremely experimental HTTP rewrite #18619 Oakでもすでに対応が行われており、次のリリースあたりでFlashのサポートが削除される可能性が高そうです。
feat: remove experimental support for Deno flash server docs: remove experimental flash content from README fresh v1.1.5 fresh v1.1.5がリリースされました。
twindv1プラグインで、SSRとCSR時に生成されたスタイルが一部重複してしまうことがある問題について改善されています。
Deno SaaSKit Deno公式からFreshやSupabase, Stripeなどを活用したSaaSプロジェクトのテンプレートが公開されました。
Announcing Deno SaaSKit: an open-source SaaS template built with Fresh ソースコードやロードマップなどが以下のリポジトリで公開されています。
https://github.com/denoland/saaskit SaaSKit v1.</description></item><item><title>2022/11/21〜2022/11/27の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/11/27.html</link><pubDate>Sun, 27 Nov 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/11/27.html</guid><description>Deno v1.28.2 Deno v1.28.2がリリースされました。
CPUプロファイリング 新機能として、以下の3メソッドが実装されています。
console.profile console.profileEnd console.timeStamp これらのAPIはDenoを実行する際に--inspectを指定した場合のみ有効化されます。
--inspectオプションが指定された状態でconsole.profile(label)が呼ばれると、console.profileEnd(label)の呼び出しまでの間に実行された処理に関するCPUプロファイルを計測することができます。
計測結果はChrome DevToolsの「Profile」タブから閲覧することができます。
Node.js互換性の改善 Import Mapsファイルの定義に/が含まれれているとマッピングがうまく動作しない問題が解消されています
{ &amp;#34;imports&amp;#34;: { &amp;#34;preact/&amp;#34;: &amp;#34;npm:preact/&amp;#34; } } module.createRequire()でURLオブジェクトがサポート
deno infoで循環したnpm依存が適切に取り扱われるように改善
型定義ファイルの検出に関する挙動の改善
importのパスにディレクトリが指定された際の型定義ファイルの検出が改善 (import * as mod from ./sub_dirとすると、./sub_dir/index.d.tsなどのファイルが自動で探索されます) package.jsonでexportsとtypesの両方が定義されているときに、exportsから先に処理されるように修正 package.jsonでtypesエントリが未定義だった際に、mainで指定されたエントリポイントを元に型定義が解決されるように挙動が改善 その他の変更点 Deno.serveと--watchオプションを併用したときに、AddrInUseエラーが出る問題が解消されています。 https://github.com/denoland/deno/releases/tag/v1.28.2
deno_std v0.166.0 deno_std v0.166.0がリリースされました。
std/fmtに関する破壊的変更 std/fmt/bytesのprettyBytes()関数がformat()にリネームされています。
既存のprettyBytes()は非推奨化されており、今後のバージョンで削除される予定です。
また、std/fmt/durationのprettyDuration()も同様にformat()へリネームされています。
std/node - Node.js互換性の改善 Deno本体でのNode.</description></item><item><title>2021/08/22〜2022/08/28の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/08/28.html</link><pubDate>Sun, 28 Aug 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/08/28.html</guid><description>Deno v1.25.0 Deno v1.25.0がリリースされました。
以下の記事に変更点をまとめたため、詳しくはそちらを参照いただければと思います。
Deno v1.25 deno_std v0.153.0 deno_std v0.153.0がリリースされました。
std/encoding/csv: parse()が同期的に動作するように (破壊的変更) parse()の引数からBufReaderが削除されています
これに伴い、parse()の戻り値がstring[][] | Record&amp;lt;string, unknown&amp;gt;[]に変更されています。
import { parse } from &amp;#34;https://deno.land/std@0.153.0/encoding/csv.ts&amp;#34;; const records = parse(`id,name 1,foo 2,bar`); console.log(records); // Output: [ [ &amp;#34;id&amp;#34;, &amp;#34;name&amp;#34; ], [ &amp;#34;1&amp;#34;, &amp;#34;foo&amp;#34; ], [ &amp;#34;2&amp;#34;, &amp;#34;bar&amp;#34; ] ] std/http/cookie_mapモジュールが追加 MapライクなAPIをベースにCookieを管理するためのユーティリティモジュールが追加されました。
CookieMapはリクエスト及びレスポンスに関するCookieの管理に利用することができます。
import { CookieMap, mergeHeaders } from &amp;#34;https://deno.land/std@0.153.0/http/cookie_map.ts&amp;#34;; const req = new Request(&amp;#34;http://localhost:3000&amp;#34;, { headers: { cookie: &amp;#34;foo=bar; hoge=piyo;&amp;#34; }, }); const cookies = new CookieMap(req); cookies.</description></item><item><title>2021/07/04〜2022/07/10の最新情報</title><link>https://uki00a.github.io/deno-weekly/articles/2022/07/10.html</link><pubDate>Sun, 10 Jul 2022 00:00:00 +0000</pubDate><guid>https://uki00a.github.io/deno-weekly/articles/2022/07/10.html</guid><description>Deno v1.23.3 Deno v1.23.3がリリースされました。
このリリースでは、deno testなどの引数にfile:形式でディレクトリを指定すると、エラーが発生する問題が修正されています。
# v1.23.2まではエラー $ deno test file:///home/foo/sample/tests また、Denoの内部で使用されているTypeScriptがv4.7.4へアップデートされています。
その他には、いくつかのパフォーマンスチューニングなどが実施されています。
https://github.com/denoland/deno/releases/tag/v1.23.3
deno_std v0.147.0 deno_std v0.147.0がリリースされました。
dotenv dotenvモジュールで、変数の展開がサポートされました。
例えば、以下のような内容で.envファイルが定義されていたとします。
HOST=localhost URL=http://${HOST}:${PORT:-3000} このファイルをdotenvモジュールで読み込むと、以下のように評価されます。
{ HOST: &amp;#34;localhost&amp;#34;, URL: &amp;#34;http://localhost:3000&amp;#34; } その他には、stringify()関数が追加されています。
import { stringify } from &amp;#34;https://deno.land/std@0.147.0/dotenv/mod.ts&amp;#34;; stringify({ PORT: &amp;#34;3000&amp;#34;, HOST: &amp;#34;localhost&amp;#34;, LOG_LEVEL: &amp;#34;debug&amp;#34; }); // PORT=3000 // HOST=localhost // LOG_LEVEL=debug http oak_commonsのHTTPエラーとコンテントネゴシエーション用のモジュールがdeno_std/httpに取り込まれました。
http/negotiation
import { accepts } from &amp;#34;https://deno.land/std@0.147.0/http/negotiation.ts&amp;#34;; const req = new Request(&amp;#34;https://github.</description></item></channel></rss>